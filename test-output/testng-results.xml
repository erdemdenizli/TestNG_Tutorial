<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="13" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-06-15T14:41:37Z" name="Loan Department" finished-at="2019-06-15T14:41:37Z" duration-ms="31">
    <groups>
      <group name="Smoke">
        <method signature="day2.ploan()[pri:0, instance:test1.day2@26794848]" name="ploan" class="test1.day2"/>
        <method signature="day4.MobileLoginHomeLoan()[pri:0, instance:test1.day4@40005471]" name="MobileLoginHomeLoan" class="test1.day4"/>
        <method signature="day3.MobileLogincarLoan()[pri:0, instance:test1.day3@3c3d9b6b]" name="MobileLogincarLoan" class="test1.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2019-06-15T14:41:37Z" name="Car Loan" finished-at="2019-06-15T14:41:37Z" duration-ms="31">
      <class name="test1.day1">
        <test-method is-config="true" signature="afSyite()[pri:0, instance:test1.day1@3d285d7e]" started-at="2019-06-15T14:41:37Z" name="afSyite" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSyite -->
      </class> <!-- test1.day1 -->
      <class name="test1.day3">
        <test-method is-config="true" signature="Bfsuite()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="Bfsuite" finished-at="2019-06-15T14:41:37Z" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Bfsuite -->
        <test-method is-config="true" signature="befoclas()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="befoclas" finished-at="2019-06-15T14:41:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- befoclas -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="beforeevery" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobileLogincarLoan()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="MobileLogincarLoan" finished-at="2019-06-15T14:41:37Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogincarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="afterevery" finished-at="2019-06-15T14:41:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="beforeevery" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="afterevery" finished-at="2019-06-15T14:41:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="beforeevery" finished-at="2019-06-15T14:41:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="beforeevery" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="afterevery" finished-at="2019-06-15T14:41:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="MobilesignoutcarLoan(java.lang.String, java.lang.String)[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="MobilesignoutcarLoan" data-provider="getData" finished-at="2019-06-15T14:41:37Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutcarLoan -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="afterevery" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method signature="WebloginCarLoan(java.lang.String, java.lang.String)[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="WebloginCarLoan" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginCarLoan -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="beforeevery" finished-at="2019-06-15T14:41:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method is-config="true" signature="afterevery()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="afterevery" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterevery -->
        <test-method is-config="true" signature="afteclas()[pri:0, instance:test1.day3@3c3d9b6b]" started-at="2019-06-15T14:41:37Z" name="afteclas" finished-at="2019-06-15T14:41:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afteclas -->
      </class> <!-- test1.day3 -->
    </test> <!-- Car Loan -->
    <test started-at="2019-06-15T14:41:37Z" name="Personal loan" finished-at="2019-06-15T14:41:37Z" duration-ms="30">
      <class name="test1.day2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:test1.day2@26794848]" started-at="2019-06-15T14:41:37Z" name="prerequiste" finished-at="2019-06-15T14:41:37Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="ploan()[pri:0, instance:test1.day2@26794848]" started-at="2019-06-15T14:41:37Z" name="ploan" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test1.day2 -->
      <class name="test1.day1">
        <test-method signature="Demo()[pri:0, instance:test1.day1@3d285d7e]" started-at="2019-06-15T14:41:37Z" name="Demo" finished-at="2019-06-15T14:41:37Z" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at test1.day1.Demo(day1.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test1.day1@3d285d7e]" started-at="2019-06-15T14:41:37Z" name="lastexecution" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test1.day1 -->
      <class name="test1.day4">
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:test1.day4@40005471]" started-at="2019-06-15T14:41:37Z" name="LoginAPIHomeLoan" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test1.day4@40005471]" started-at="2019-06-15T14:41:37Z" name="MobileLoginHomeLoan" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="WebloginHomeLoan(java.lang.String)[pri:0, instance:test1.day4@40005471]" started-at="2019-06-15T14:41:37Z" name="WebloginHomeLoan" finished-at="2019-06-15T14:41:37Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebloginHomeLoan -->
      </class> <!-- test1.day4 -->
    </test> <!-- Personal loan -->
  </suite> <!-- Loan Department -->
</testng-results>
